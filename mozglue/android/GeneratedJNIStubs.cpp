// GENERATED CODE
// Generated by the Java program at /build/annotationProcessors at compile time
// from annotations on Java methods. To update, change the annotations on the
// corresponding Java methods and rerun the build. Manually updating this file
// will cause your build to fail.

#include "JNIStubs.h"

namespace mozilla {
namespace jni {

#define REGISTER_PREVIOUS_STUBS(env) ((void)0)

constexpr char ANRReporter_ReleaseNativeStack_name[] =
        "releaseNativeStack";
constexpr char ANRReporter_ReleaseNativeStack_sig[] =
        "()V";

namespace {
void ANRReporter_register(JNIEnv* env)
{
    const JNINativeMethod methods[] = {
        { ANRReporter_ReleaseNativeStack_name,
          ANRReporter_ReleaseNativeStack_sig,
          reinterpret_cast<void*>(JNICall<true
                >::QueuingStub<
                ANRReporter_ReleaseNativeStack_name,
                ANRReporter_ReleaseNativeStack_sig>) }
    };
    RegisterStubs(env, "org/mozilla/gecko/ANRReporter",
            methods, sizeof(methods) / sizeof(methods[0]));
    return REGISTER_PREVIOUS_STUBS(env);
}
} // namespace

#undef REGISTER_PREVIOUS_STUBS
#define REGISTER_PREVIOUS_STUBS(env) ANRReporter_register(env)

constexpr char NativeJSContainer_DisposeNative_name[] =
        "disposeNative";
constexpr char NativeJSContainer_DisposeNative_sig[] =
        "()V";

namespace {
void NativeJSContainer_register(JNIEnv* env)
{
    const JNINativeMethod methods[] = {
        { NativeJSContainer_DisposeNative_name,
          NativeJSContainer_DisposeNative_sig,
          reinterpret_cast<void*>(JNICall<false
                >::QueuingStub<
                NativeJSContainer_DisposeNative_name,
                NativeJSContainer_DisposeNative_sig>) }
    };
    RegisterStubs(env, "org/mozilla/gecko/util/NativeJSContainer",
            methods, sizeof(methods) / sizeof(methods[0]));
    return REGISTER_PREVIOUS_STUBS(env);
}
} // namespace

#undef REGISTER_PREVIOUS_STUBS
#define REGISTER_PREVIOUS_STUBS(env) NativeJSContainer_register(env)

void RegisterGeneratedStubs(JNIEnv* env)
{
    return REGISTER_PREVIOUS_STUBS(env);
}

} // namespace jni
} // namespace mozilla
